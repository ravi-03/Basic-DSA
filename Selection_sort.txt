#include<bits/stdc++.h>
#define debug(x) cout<<#x<<"::"<<x<<endl;
using namespace std;
typedef long long ll;

void selection_sort(int *arr, int n)
{
	int mini;
	for(int i=0;i<n;i++)
	{
		mini=i;
		//Finding min of all from arr[i....n-1] and placing it at position i
		for(int j=i+1;j<n;j++)
		{
			if(arr[j]<arr[mini])
			{
				mini=j;
			}
		}
		if(i!=mini)
		{
			swap(arr[i],arr[mini]);
		}
	}
}

void print_arr(int *arr,int n)
{
	for(int i=0;i<n;i++)
	{
		cout<<arr[i]<<' ';
	}
	cout<<'\n';
}

void solve()
{
	int n;
	cin>>n;
	int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}

	cout<<"Before Selection_sort:  ";
	print_arr(arr,n);

	selection_sort(arr,n);

	cout<<"After Selection_sort:  ";
	print_arr(arr,n);
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int t;
	t=1;
	while(t--)
		solve();
	return 0;
}

/*****Analysis******
Best Case: O(n^2)
Worst Case: O(n^2)
Average Case: O(n^2)

->Number of comparisions in all cases is O(n^2)

** Selection_sort is UNSTABLE SORT.
** Selection_sort is an IN-PLACE SORT.
** Space Complexity: O(1)
*/